{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["/**\n * Buildbot server\n */\n'use strict';\n\nconst _ = require('lodash-node');\nconst freeportAsync = require('freeport-async');\n\nconst koa = require('koa');\nconst api = require('@exponent/koa-api');\nconst identify = require('koa-identify');\nconst logger = require('koa-logger');\nconst router = require('koa-router');\n\nconst buildAsync = require('./buildAsync');\nconst ngrokAsync = require('./ngrokAsync');\n\nlet BuildbotApi = {\n\n    build: {\n      doc: \"Will create a build and test it\",\n      methodAsync: async function (env, args) {\n        return false;\n      },\n    },\n\n    release: {\n      doc: \"Runs a build and returns the result if successful\",\n      methodAsync: async function (env, args) {\n        buildAsync().then((result) => {\n          console.log(\"Release completed successfully.\");\n        }, (err) => {\n          console.error(\"Error creating the build!\", err, err.stack);\n        });\n\n        return true;\n\n      },\n    },\n\n  //   add: {\n  //     doc: \"Adds two numbers and returns the result\",\n  //     methodAsync: function (env, args) {\n  //       console.log(\"Called methodAsync\");\n  //       return new Promise(function (resolve, reject) {\n  //         var sum = 0;\n  //         for (var i = 0; i < args.length; i++) {\n  //           if (!_.isNumber(args[i])) {\n  //             var err = api.ApiError('TYPE_ERROR', args[i] + \" is not a number!\");\n  //             console.error(err);\n  //             return reject(err);\n  //           } else {\n  //             sum += args[i];\n  //           }\n  //         }\n  //         console.log(\"Added up\", args, \"to get\", sum);\n  //         return resolve(sum);\n  //       });\n  //     },\n  //  },\n};\n\nvar app = koa();\napp.name = 'buildbot';\napp.proxy = true;\napp.experimental = true;\n\napp.use(logger());\napp.use(identify());\napp.use(api(app, BuildbotApi));\n\nif (require.main === module) {\n  (async function () {\n    let argv = require('minimist')(process.argv.slice(2));\n    let port = argv.port || argv.p || await freeportAsync(3500);\n\n    let server = app.listen(port, function () {\n      let addr = server.address();\n      let port = addr.port;\n      let host = addr.address;\n      console.log('Listening on http://' + host + ':' + port + ' using NODE_ENV=' + process.env.NODE_ENV);\n    });\n\n    try {\n      let url = await ngrokAsync({port});\n      console.log(\"Tunneling to port\", port, \"via ngrok at\", url);\n    } catch (e) {\n      console.error(\"Failed to start ngrok tunnel!\\n\", e, e.stack);\n      process.exit(-2);\n    }\n\n  })().then((result) => {\n    if (result) {\n      console.log(result);\n    }\n  }, (err) => {\n    console.error(err, err.stack);\n  });\n}\n\nmodule.exports = app;\n"],"sourceRoot":"/source/"}